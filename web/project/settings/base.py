"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys
import environ
from django.utils.datetime_safe import date
from base.settings.log import PseudoTTY
SETTINGS_DIR = environ.Path(__file__) - 1
PROJECT_DIR = environ.Path(__file__) - 2
BASE_DIR = environ.Path(__file__) - 3
ROOT_DIR = environ.Path(__file__) - 4
HOJE = date.today().strftime('%Y-%m-%d') # para log de dev

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

env = environ.Env(DEBUG=(bool, False),)
env_path = '{}.env'.format(os.environ.get('STAGE', 'dev'))
# carregar arquivo de configuracao, ideal para staging ou prod
environ.Env.read_env(str(SETTINGS_DIR.path('{}.env'.format(os.environ.get('STAGE', 'dev')))))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'rafm4oeuvwbk#8rx&34&%%eq9ji&&h34#oi5k)f=*+(f@!1lgd'

DOCKER_IP = env.str('DOCKER_IP', '192.168.99.100')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ('*',)

ADMINS = (
    ('Autor', 'seu@email.com.br'),
)


INTERNAL_IPS = '127.0.0.1'
DEBUG_TOOLBAR_PANELS = (
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    # 'debug_toolbar.panels.redirects.RedirectsPanel',
)

DEBUG_TOOLBAR_CONFIG = {

}
# Application definition

INSTALLED_APPS = (
    'base',
    'apps.minhapp.apps.MinhappApp',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

MIDDLEWARE = (
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'base.settings.stackoverflow.middleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
)

ROOT_URLCONF = 'project.urls'

TEMPLATES = (
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': (
            str(BASE_DIR.path('templates')),
        ),
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
)

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': env.db(default='psql://site:site@{}:5432/site'.format(DOCKER_IP))
}


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
LANGUAGE_CODE = 'pt-br'
LANGUAGES = (('pt-br', 'Brazilian Portuguese'),)
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_L10N = True
USE_TZ = True

DATETIME_FORMAT = 'd/m/Y H:i'
DATE_FORMAT = 'd/m/Y'
TIME_FORMAT = 'H:i'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STATICFILES_DIRS = [
    str(BASE_DIR.path('static/assets')),
]

STATIC_ROOT = str(BASE_DIR.path('static/apps'))
STATIC_URL = '/static/'

MEDIA_ROOT = str(BASE_DIR.path('static/media'))
MEDIA_URL = '/media/'


AUTH_PASSWORD_VALIDATORS = (
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    }, {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 5,
        }
    }, {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    }, {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
)

# region logging

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        'not_static_file': {
            '()': 'base.settings.log.NotStaticFile',
        },
    },
    'formatters': {
        'stream': {
            'format': '%(name)s %(levelname)s: %(message)s',
            'datefmt': '%b %d %H:%M:%S',
        },
        'standard': {
            '()': 'nicelog.formatters.Colorful',
            'show_date': True,
            'show_function': True,
            'show_filename': True,
            'message_inline': False,
        },
    },
    'handlers': {
        'arquivo_temp': {
            'class': 'logging.FileHandler',
            'filename': str(ROOT_DIR.path('etc/log/dev_' + HOJE + '.txt'))
        },
        'mail_admins': {
            'level': 'ERROR',
            #'filters': ('require_debug_false',),
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard',
            'stream': PseudoTTY(sys.stdout),
        },
    },
    'loggers': {
        'django': {
            'handlers': ('console', 'arquivo_temp',),
            'level': 'ERROR',
            'propagate': False,
        },
        'django.db.backends': {
            'level': 'DEBUG',
            'filters': ('require_debug_true',),
            'handlers': ('arquivo_temp',),
            'propagate': False,
        },
        'django.server': {
            'handlers': ('console', 'arquivo_temp',),
            'filters': ('not_static_file',),
            'level': 'DEBUG',
            'propagate': False,
        },
        'werkzeug': {
            'handlers': ('console', 'arquivo_temp',),
            'level': 'DEBUG',
            'propagate': True,
        },
        'debug': {
            'level': 'DEBUG',
            'handlers': ('console', 'arquivo_temp',),
            'propagate': False,
        }
    }
}
# endregion